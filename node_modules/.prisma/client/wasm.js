
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  virtual_credits: 'virtual_credits',
  is_admin: 'is_admin'
};

exports.Prisma.GameTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.PrizeTierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  start_prize: 'start_prize',
  end_prize: 'end_prize',
  description: 'description'
};

exports.Prisma.DrawScheduleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  draw_time: 'draw_time',
  bet_close_time: 'bet_close_time'
};

exports.Prisma.BetTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PayoutRuleScalarFieldEnum = {
  id: 'id',
  payout_rate: 'payout_rate',
  bet_type_id: 'bet_type_id',
  prize_tier_id: 'prize_tier_id'
};

exports.Prisma.DrawResultScalarFieldEnum = {
  id: 'id',
  draw_date: 'draw_date',
  prize1_number: 'prize1_number',
  prize2_number: 'prize2_number',
  prize3_number: 'prize3_number',
  prize4_number: 'prize4_number',
  prize5_number: 'prize5_number',
  prize6_number: 'prize6_number',
  prize7_number: 'prize7_number',
  status: 'status',
  draw_schedule_id: 'draw_schedule_id'
};

exports.Prisma.BetScalarFieldEnum = {
  id: 'id',
  numbers_betted: 'numbers_betted',
  amount_wagered: 'amount_wagered',
  amount_won: 'amount_won',
  status: 'status',
  created_at: 'created_at',
  user_id: 'user_id',
  game_type_id: 'game_type_id',
  bet_type_id: 'bet_type_id',
  prize_tier_id: 'prize_tier_id',
  draw_result_id: 'draw_result_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.DrawStatus = exports.$Enums.DrawStatus = {
  PENDING: 'PENDING',
  PUBLISHED: 'PUBLISHED',
  CANCELLED: 'CANCELLED'
};

exports.BetStatus = exports.$Enums.BetStatus = {
  PENDING: 'PENDING',
  WON: 'WON',
  LOST: 'LOST'
};

exports.Prisma.ModelName = {
  User: 'User',
  GameType: 'GameType',
  PrizeTier: 'PrizeTier',
  DrawSchedule: 'DrawSchedule',
  BetType: 'BetType',
  PayoutRule: 'PayoutRule',
  DrawResult: 'DrawResult',
  Bet: 'Bet'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/dev.guirocha/Documents/panda-loterias/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/dev.guirocha/Documents/panda-loterias/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// --- NOSSOS MODELOS DA PANDA LOTERIAS ---\n\nmodel User {\n  id              Int     @id @default(autoincrement())\n  name            String\n  email           String  @unique\n  password        String // Lembre-se de fazer o hash antes de salvar!\n  virtual_credits Decimal @default(1000.00) // Usuário já começa com créditos\n  is_admin        Boolean @default(false)\n  bets            Bet[] // Relação: Um usuário tem muitas apostas\n}\n\nmodel GameType {\n  id          Int     @id @default(autoincrement())\n  name        String  @unique\n  description String? // O '?' indica que é opcional\n  bets        Bet[] // Relação: Um tipo de jogo está em muitas apostas\n}\n\nmodel PrizeTier {\n  id           Int          @id @default(autoincrement())\n  name         String       @unique\n  start_prize  Int // ex: 1\n  end_prize    Int // ex: 5\n  description  String?\n  payout_rules PayoutRule[] // Relação: Este \"tier\" está em muitas regras\n  bets         Bet[] // Relação: Este \"tier\" está em muitas apostas\n}\n\nmodel DrawSchedule {\n  id             Int          @id @default(autoincrement())\n  name           String       @unique // ex: PTM, Corujinha\n  draw_time      String // Armazenar como \"HH:mm\", ex: \"11:20\"\n  bet_close_time String // Armazenar como \"HH:mm\", ex: \"11:15\"\n  draw_results   DrawResult[] // Relação: Um horário tem muitos resultados (um por dia)\n}\n\nmodel BetType {\n  id           Int          @id @default(autoincrement())\n  name         String       @unique // ex: Grupo, Centena\n  payout_rules PayoutRule[] // Relação: Este tipo de aposta tem muitas regras\n  bets         Bet[] // Relação: Este tipo de aposta está em muitas apostas\n}\n\nmodel PayoutRule {\n  id            Int       @id @default(autoincrement())\n  payout_rate   Decimal // A taxa de pagamento\n  bet_type_id   Int\n  bet_type      BetType   @relation(fields: [bet_type_id], references: [id])\n  prize_tier_id Int\n  prize_tier    PrizeTier @relation(fields: [prize_tier_id], references: [id])\n\n  @@unique([bet_type_id, prize_tier_id]) // Garante que só existe uma regra por combinação\n}\n\nmodel DrawResult {\n  id               Int          @id @default(autoincrement())\n  draw_date        DateTime // Prisma usa DateTime para Date. Vamos armazenar a data.\n  prize1_number    String? // Opcional, pois pode estar pendente\n  prize2_number    String?\n  prize3_number    String?\n  prize4_number    String?\n  prize5_number    String?\n  prize6_number    String?\n  prize7_number    String?\n  status           DrawStatus   @default(PENDING) // Nosso ENUM\n  draw_schedule_id Int\n  draw_schedule    DrawSchedule @relation(fields: [draw_schedule_id], references: [id])\n  bets             Bet[] // Relação: Um resultado de sorteio tem muitas apostas\n\n  @@unique([draw_schedule_id, draw_date]) // Garante um resultado por horário/dia\n}\n\nmodel Bet {\n  id             Int        @id @default(autoincrement())\n  numbers_betted String // Pode ser um JSON string: '[\"5\", \"10\"]' ou só '\"123\"'\n  amount_wagered Decimal\n  amount_won     Decimal    @default(0.0)\n  status         BetStatus  @default(PENDING) // Nosso ENUM\n  created_at     DateTime   @default(now())\n  user_id        Int\n  user           User       @relation(fields: [user_id], references: [id])\n  game_type_id   Int\n  game_type      GameType   @relation(fields: [game_type_id], references: [id])\n  bet_type_id    Int\n  bet_type       BetType    @relation(fields: [bet_type_id], references: [id])\n  prize_tier_id  Int\n  prize_tier     PrizeTier  @relation(fields: [prize_tier_id], references: [id])\n  draw_result_id Int\n  draw_result    DrawResult @relation(fields: [draw_result_id], references: [id])\n}\n\n// Definição dos nossos ENUMs\nenum DrawStatus {\n  PENDING\n  PUBLISHED\n  CANCELLED\n}\n\nenum BetStatus {\n  PENDING\n  WON\n  LOST\n}\n",
  "inlineSchemaHash": "6d9fe68cb56a07cb687273e9748a1b9b5fbbd5077fa4cda39d759a64521e14eb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"virtual_credits\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"is_admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"bets\",\"kind\":\"object\",\"type\":\"Bet\",\"relationName\":\"BetToUser\"}],\"dbName\":null},\"GameType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bets\",\"kind\":\"object\",\"type\":\"Bet\",\"relationName\":\"BetToGameType\"}],\"dbName\":null},\"PrizeTier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_prize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"end_prize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payout_rules\",\"kind\":\"object\",\"type\":\"PayoutRule\",\"relationName\":\"PayoutRuleToPrizeTier\"},{\"name\":\"bets\",\"kind\":\"object\",\"type\":\"Bet\",\"relationName\":\"BetToPrizeTier\"}],\"dbName\":null},\"DrawSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"draw_time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bet_close_time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"draw_results\",\"kind\":\"object\",\"type\":\"DrawResult\",\"relationName\":\"DrawResultToDrawSchedule\"}],\"dbName\":null},\"BetType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payout_rules\",\"kind\":\"object\",\"type\":\"PayoutRule\",\"relationName\":\"BetTypeToPayoutRule\"},{\"name\":\"bets\",\"kind\":\"object\",\"type\":\"Bet\",\"relationName\":\"BetToBetType\"}],\"dbName\":null},\"PayoutRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"payout_rate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"bet_type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bet_type\",\"kind\":\"object\",\"type\":\"BetType\",\"relationName\":\"BetTypeToPayoutRule\"},{\"name\":\"prize_tier_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"prize_tier\",\"kind\":\"object\",\"type\":\"PrizeTier\",\"relationName\":\"PayoutRuleToPrizeTier\"}],\"dbName\":null},\"DrawResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"draw_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"prize1_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prize2_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prize3_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prize4_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prize5_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prize6_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prize7_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DrawStatus\"},{\"name\":\"draw_schedule_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"draw_schedule\",\"kind\":\"object\",\"type\":\"DrawSchedule\",\"relationName\":\"DrawResultToDrawSchedule\"},{\"name\":\"bets\",\"kind\":\"object\",\"type\":\"Bet\",\"relationName\":\"BetToDrawResult\"}],\"dbName\":null},\"Bet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"numbers_betted\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount_wagered\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"amount_won\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BetStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BetToUser\"},{\"name\":\"game_type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"game_type\",\"kind\":\"object\",\"type\":\"GameType\",\"relationName\":\"BetToGameType\"},{\"name\":\"bet_type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bet_type\",\"kind\":\"object\",\"type\":\"BetType\",\"relationName\":\"BetToBetType\"},{\"name\":\"prize_tier_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"prize_tier\",\"kind\":\"object\",\"type\":\"PrizeTier\",\"relationName\":\"BetToPrizeTier\"},{\"name\":\"draw_result_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"draw_result\",\"kind\":\"object\",\"type\":\"DrawResult\",\"relationName\":\"BetToDrawResult\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

